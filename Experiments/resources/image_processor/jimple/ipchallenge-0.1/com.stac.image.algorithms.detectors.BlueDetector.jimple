public class com.stac.image.algorithms.detectors.BlueDetector extends com.stac.image.algorithms.Detector
{

    public void <init>()
    {
        com.stac.image.algorithms.detectors.BlueDetector this;

        this := @this: com.stac.image.algorithms.detectors.BlueDetector;

        specialinvoke this.<com.stac.image.algorithms.Detector: void <init>()>();

        return;
    }

    public float detect(java.awt.image.BufferedImage)
    {
        com.stac.image.algorithms.detectors.BlueDetector this;
        java.awt.image.BufferedImage image;
        int width, height, $i0, count, x, y;
        float[] hsva;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8;
        double $d0, $d1;
        byte $b1, $b2, $b3, $b4;

        this := @this: com.stac.image.algorithms.detectors.BlueDetector;

        image := @parameter0: java.awt.image.BufferedImage;

        width = virtualinvoke image.<java.awt.image.BufferedImage: int getWidth()>();

        height = virtualinvoke image.<java.awt.image.BufferedImage: int getHeight()>();

        count = 0;

        x = 0;

     label1:
        if x >= width goto label5;

        y = 0;

     label2:
        if y >= height goto label4;

        $i0 = virtualinvoke image.<java.awt.image.BufferedImage: int getRGB(int,int)>(x, y);

        hsva = staticinvoke <com.stac.image.utilities.ARGB: float[] toHSVA(int)>($i0);

        $f5 = hsva[2];

        $d0 = (double) $f5;

        $b1 = $d0 cmpl 0.5;

        if $b1 < 0 goto label3;

        $f6 = hsva[1];

        $d1 = (double) $f6;

        $b2 = $d1 cmpl 0.15;

        if $b2 < 0 goto label3;

        $f7 = hsva[0];

        $b3 = $f7 cmpl 180.0F;

        if $b3 <= 0 goto label3;

        $f8 = hsva[0];

        $b4 = $f8 cmpg 300.0F;

        if $b4 >= 0 goto label3;

        count = count + 1;

     label3:
        y = y + 1;

        goto label2;

     label4:
        x = x + 1;

        goto label1;

     label5:
        $f3 = (float) count;

        $f1 = (float) width;

        $f0 = (float) height;

        $f2 = $f1 * $f0;

        $f4 = $f3 / $f2;

        return $f4;
    }
}
