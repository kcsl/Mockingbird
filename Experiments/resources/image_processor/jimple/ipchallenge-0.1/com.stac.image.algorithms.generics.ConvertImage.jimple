public class com.stac.image.algorithms.generics.ConvertImage extends java.lang.Object
{

    public void <init>()
    {
        com.stac.image.algorithms.generics.ConvertImage this;

        this := @this: com.stac.image.algorithms.generics.ConvertImage;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.awt.image.BufferedImage grayscale(java.awt.image.BufferedImage)
    {
        java.awt.image.BufferedImage image, $r2;
        java.awt.image.ColorConvertOp $r0;
        java.awt.color.ColorSpace $r1;

        image := @parameter0: java.awt.image.BufferedImage;

        $r0 = new java.awt.image.ColorConvertOp;

        $r1 = staticinvoke <java.awt.color.ColorSpace: java.awt.color.ColorSpace getInstance(int)>(1003);

        specialinvoke $r0.<java.awt.image.ColorConvertOp: void <init>(java.awt.color.ColorSpace,java.awt.RenderingHints)>($r1, null);

        $r2 = virtualinvoke $r0.<java.awt.image.ColorConvertOp: java.awt.image.BufferedImage filter(java.awt.image.BufferedImage,java.awt.image.BufferedImage)>(image, null);

        return $r2;
    }

    public static java.awt.image.BufferedImage boostedGray(java.awt.image.BufferedImage)
    {
        java.awt.image.BufferedImage image, out, $r0;
        int argb, a, r, g, b, val, $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, i, j;

        image := @parameter0: java.awt.image.BufferedImage;

        $r0 = new java.awt.image.BufferedImage;

        $i0 = virtualinvoke image.<java.awt.image.BufferedImage: int getWidth()>();

        $i1 = virtualinvoke image.<java.awt.image.BufferedImage: int getHeight()>();

        specialinvoke $r0.<java.awt.image.BufferedImage: void <init>(int,int,int)>($i0, $i1, 2);

        out = $r0;

        i = 0;

     label1:
        $i2 = virtualinvoke image.<java.awt.image.BufferedImage: int getWidth()>();

        if i >= $i2 goto label4;

        j = 0;

     label2:
        $i3 = virtualinvoke image.<java.awt.image.BufferedImage: int getHeight()>();

        if j >= $i3 goto label3;

        argb = virtualinvoke image.<java.awt.image.BufferedImage: int getRGB(int,int)>(i, j);

        a = staticinvoke <com.stac.image.utilities.ARGB: int rawA(int)>(argb);

        r = staticinvoke <com.stac.image.utilities.ARGB: int rawR(int)>(argb);

        g = staticinvoke <com.stac.image.utilities.ARGB: int rawG(int)>(argb);

        b = staticinvoke <com.stac.image.utilities.ARGB: int rawB(int)>(argb);

        $i4 = r + r;

        $i5 = $i4 + r;

        $i6 = $i5 + b;

        $i7 = $i6 + g;

        $i8 = $i7 + g;

        $i9 = $i8 + g;

        $i10 = $i9 + g;

        val = $i10 / 8;

        $i11 = staticinvoke <com.stac.image.utilities.ARGB: int toARGB(int,int,int,int)>(a, val, val, val);

        virtualinvoke out.<java.awt.image.BufferedImage: void setRGB(int,int,int)>(i, j, $i11);

        j = j + 1;

        goto label2;

     label3:
        i = i + 1;

        goto label1;

     label4:
        return out;
    }

    public static java.awt.image.BufferedImage otherGray(java.awt.image.BufferedImage)
    {
        java.awt.image.BufferedImage image, out, $r0;
        java.awt.Graphics g;
        int $i0, $i1;

        image := @parameter0: java.awt.image.BufferedImage;

        $r0 = new java.awt.image.BufferedImage;

        $i0 = virtualinvoke image.<java.awt.image.BufferedImage: int getWidth()>();

        $i1 = virtualinvoke image.<java.awt.image.BufferedImage: int getHeight()>();

        specialinvoke $r0.<java.awt.image.BufferedImage: void <init>(int,int,int)>($i0, $i1, 10);

        out = $r0;

        g = virtualinvoke out.<java.awt.image.BufferedImage: java.awt.Graphics getGraphics()>();

        virtualinvoke g.<java.awt.Graphics: boolean drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)>(image, 0, 0, null);

        return out;
    }
}
