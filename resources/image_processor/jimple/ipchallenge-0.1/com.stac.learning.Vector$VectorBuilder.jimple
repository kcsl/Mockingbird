public class com.stac.learning.Vector$VectorBuilder extends java.lang.Object
{
    private int trackedIndex;
    private final com.stac.learning.VectorFactory ctor;
    private com.stac.learning.Vector vector;

    public void <init>(com.stac.learning.VectorFactory, int)
    {
        com.stac.learning.Vector$VectorBuilder this;
        com.stac.learning.VectorFactory vectorFactory, $r1, $r2;
        int size;
        java.lang.Object $r0;
        com.stac.learning.Vector $r3;

        this := @this: com.stac.learning.Vector$VectorBuilder;

        vectorFactory := @parameter0: com.stac.learning.VectorFactory;

        size := @parameter1: int;

        specialinvoke this.<java.lang.Object: void <init>()>();

        this.<com.stac.learning.Vector$VectorBuilder: int trackedIndex> = 0;

        $r0 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(vectorFactory, "Vector Supplier must not be null");

        $r1 = (com.stac.learning.VectorFactory) $r0;

        this.<com.stac.learning.Vector$VectorBuilder: com.stac.learning.VectorFactory ctor> = $r1;

        $r2 = this.<com.stac.learning.Vector$VectorBuilder: com.stac.learning.VectorFactory ctor>;

        $r3 = virtualinvoke $r2.<com.stac.learning.VectorFactory: com.stac.learning.Vector get(int)>(size);

        this.<com.stac.learning.Vector$VectorBuilder: com.stac.learning.Vector vector> = $r3;

        return;
    }

    public com.stac.learning.Vector$VectorBuilder add(float)
    {
        com.stac.learning.Vector$VectorBuilder this;
        float attr;
        byte $b0, $b1;
        java.lang.IllegalArgumentException $r0;
        com.stac.learning.Vector $r1;
        int $i2, $i3;
        float[] $r2;

        this := @this: com.stac.learning.Vector$VectorBuilder;

        attr := @parameter0: float;

        $b0 = attr cmpl 0.0F;

        if $b0 < 0 goto label1;

        $b1 = attr cmpg 1.0F;

        if $b1 > 0 goto label1;

        $r1 = this.<com.stac.learning.Vector$VectorBuilder: com.stac.learning.Vector vector>;

        $r2 = $r1.<com.stac.learning.Vector: float[] attributes>;

        $i2 = this.<com.stac.learning.Vector$VectorBuilder: int trackedIndex>;

        $i3 = $i2 + 1;

        this.<com.stac.learning.Vector$VectorBuilder: int trackedIndex> = $i3;

        $r2[$i2] = attr;

        goto label2;

     label1:
        $r0 = new java.lang.IllegalArgumentException;

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Attribute \'attr\': must be in the range (0,1)");

        throw $r0;

     label2:
        return this;
    }

    public com.stac.learning.Vector build() throws java.io.InvalidObjectException
    {
        com.stac.learning.Vector$VectorBuilder this;
        com.stac.learning.Vector v, $r0;
        java.io.InvalidObjectException $r1;

        this := @this: com.stac.learning.Vector$VectorBuilder;

        $r0 = this.<com.stac.learning.Vector$VectorBuilder: com.stac.learning.Vector vector>;

        if $r0 != null goto label1;

        $r1 = new java.io.InvalidObjectException;

        specialinvoke $r1.<java.io.InvalidObjectException: void <init>(java.lang.String)>("This vector has been built.");

        throw $r1;

     label1:
        v = this.<com.stac.learning.Vector$VectorBuilder: com.stac.learning.Vector vector>;

        this.<com.stac.learning.Vector$VectorBuilder: com.stac.learning.Vector vector> = null;

        return v;
    }
}
